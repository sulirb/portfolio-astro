---
interface Project {
  slug: string;
  title: string;
  description: string;
  tags: string[];
  image?: string;
   details?: string;
   link?: string;
  content?: string;
}
const { project }: { project: Project } = Astro.props;
---
<article class="card" style="display:flex; flex-direction:column; height:100%; position: relative;">
  {project.image && (
    <img src={project.image} alt={project.title} style="width:100%; aspect-ratio: 16/9; object-fit: cover;" loading="lazy" class="blur-up" />
  )}
  {project.featured && (
    <span class="surface" style="position:absolute; top:.6rem; left:.6rem; padding:.25rem .5rem; border-radius:.5rem; font-size:.8rem;">En vedette</span>
  )}
  <div style="padding: 1rem; display:flex; flex-direction:column; gap:.5rem; flex:1; min-height:0;">
    <h3 style="margin:0; font-size:1.1rem;">{project.title}</h3>
    <p class="muted" style="margin:0; overflow:auto;">{project.description}</p>
    <div style="display:flex; gap:.4rem; flex-wrap: wrap;">
      {project.tags.map(tag => (
        <span class="surface" style="padding:.25rem .5rem; border-radius:.5rem; font-size:.85rem;" aria-label={tag}>{tag}</span>
      ))}
    </div>
  </div>
  <div style="padding: 0 1rem 1rem; display:flex; gap:.5rem;">
    {project.details && (<a href={project.details} class="btn">DÃ©tails</a>)}
    {project.link && (<a href={project.link} class="btn btn-ghost">Lien</a>)}
  </div>
</article>



